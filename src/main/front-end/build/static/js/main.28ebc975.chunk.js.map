{"version":3,"sources":["i18n/Locales.js","services/UserDataService.js","PrivateRoute.js","RestrictedRoute.js","components/Home.js","components/NotFound.js","i18n/Translate.js","services/RoleContext.js","components/NavigationBar.js","components/Login.js","components/Register.js","components/Confirm.js","components/AccessDenied.js","components/ListAccounts.js","i18n/messages/en-US.js","i18n/messages/pl-PL.js","i18n/messages/index.js","i18n/Provider.js","App.js","HttpsApp.js","index.js"],"names":["LOCALES","cookies","Cookies","token","require","getHeader","jwt","get","Authorization","getLanguageShortcut","getUser","decode","getAccessLevels","getFirstAccessLevel","roles","includes","process","getCurrentAccessLevel","role","sessionStorage","getItem","hashString","getLanguage","localStorage","substring","string","stringHash","PrivateRoute","Component","component","accessLevels","rest","render","props","to","RestrictedRoute","Home","messages","Swal","fire","icon","html","join","position","timer","showConfirmButton","then","removeItem","NotFound","translate","id","RoleContext","React","createContext","setRole","NavigationBar","logout","remove","guestNavbar","Nav","className","Item","Link","as","Translate","clientNavbar","managerNavbar","adminNavbar","NavLink","accessLevelNavbar","length","NavDropdown","alignRight","title","onClick","changeRole","setItem","window","location","replace","usernameNavbar","languageNavbar","disabled","changeLanguage","language","axios","put","headers","catch","console","log","reload","logoutNavbar","href","Consumer","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Login","emptyUser","navigator","handleFieldChanged","event","field","tmp","state","user","target","value","setState","login","e","preventDefault","post","response","data","set","path","history","push","error","FormGroup","FormLabel","FormControl","autoFocus","this","onChange","type","Button","Register","register","Confirm","AccessDenied","ListAccounts","createData","email","firstname","lastname","active","confirmed","lastAuthIP","lastAuthDate","users","loaded","finally","classes","makeStyles","table","minWidth","rows","i","toString","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","en","pl","Provider","children","locale","textComponent","Fragment","App","Container","exact","HttpsApp","defaults","baseURL","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28ebc975.chunk.js","sourcesContent":["export const LOCALES = {\r\n  ENGLISH: 'en-US',\r\n  POLISH: 'pl-PL'\r\n};","import Cookies from \"universal-cookie/lib\";\r\nimport {LOCALES} from \"../i18n/Locales\";\r\n\r\nconst cookies = new Cookies();\r\nlet token = require(\"jsonwebtoken\");\r\n\r\nexport const getHeader = () => {\r\n    let jwt = cookies.get(\"jwt\");\r\n    if(jwt != null) {\r\n        return { Authorization: 'Bearer ' + jwt, \"lang\": getLanguageShortcut()};\r\n    } else {\r\n        return { \"lang\": getLanguageShortcut() };\r\n    }\r\n};\r\n\r\nexport const getUser = () => {\r\n    let jwt = cookies.get(\"jwt\");\r\n    if(jwt != null) {\r\n        return token.decode(jwt)[\"sub\"];\r\n    } else {\r\n        return \"\";\r\n    }\r\n};\r\n\r\nexport const getAccessLevels = () => {\r\n    let jwt = cookies.get(\"jwt\");\r\n    if(jwt != null) {\r\n        return token.decode(jwt)[\"roles\"];\r\n    } else {\r\n        return \"\";\r\n    }\r\n};\r\n\r\nexport const getFirstAccessLevel = () => {\r\n    let roles = getAccessLevels();\r\n    if(roles) {\r\n        if(roles.includes(process.env.REACT_APP_ADMIN_ROLE)) return process.env.REACT_APP_ADMIN_ROLE;\r\n        else if(roles.includes(process.env.REACT_APP_MANAGER_ROLE)) return process.env.REACT_APP_MANAGER_ROLE;\r\n        else if(roles.includes(process.env.REACT_APP_CLIENT_ROLE)) return process.env.REACT_APP_CLIENT_ROLE;\r\n    }\r\n};\r\n\r\nexport const getCurrentAccessLevel = () => {\r\n  let role = sessionStorage.getItem(\"role\");\r\n  if(hashString(process.env.REACT_APP_ADMIN_ROLE) == role) return process.env.REACT_APP_ADMIN_ROLE;\r\n  else if(hashString(process.env.REACT_APP_MANAGER_ROLE) == role) return process.env.REACT_APP_MANAGER_ROLE;\r\n  else if(hashString(process.env.REACT_APP_CLIENT_ROLE) == role) return process.env.REACT_APP_CLIENT_ROLE;\r\n};\r\n\r\nexport const getLanguage = () => {\r\n  if(localStorage.getItem(\"lang\") === 'en')\r\n      return LOCALES.ENGLISH;\r\n  else return LOCALES.POLISH;\r\n};\r\n\r\nexport const getLanguageShortcut = () => {\r\n  return getLanguage().substring(0,2);\r\n};\r\n\r\nexport const hashString = (string) => {\r\n    const stringHash = require(\"string-hash\");\r\n    return stringHash(string);\r\n};","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {getCurrentAccessLevel, getUser} from \"./services/UserDataService\";\r\n\r\nexport const PrivateRoute = ({component: Component, accessLevels, ...rest}) => {\r\n  return (\r\n      <Route {...rest} render={props => (\r\n          getUser() !== \"\" && accessLevels.includes(getCurrentAccessLevel()) ?\r\n              <Component {...props} />\r\n              : <Redirect to=\"/accessDenied\" />\r\n      )} />\r\n  );\r\n};","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from \"./services/UserDataService\";\r\n\r\nexport const RestrictedRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            getUser() === \"\" ?\r\n                <Component {...props} />\r\n                : <Redirect to=\"/\" />\r\n        )} />\r\n    );\r\n};","import React, { Component } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default class Home extends Component {\r\n\r\n    componentDidMount() {\r\n        if(\"swal1\" in localStorage) {\r\n            let messages = [localStorage.getItem('swal1'), localStorage.getItem('swal2')];\r\n            Swal.fire({\r\n                icon: 'success',\r\n                html: messages.join('<br>'),\r\n                position: \"top-right\",\r\n                timer: 2500,\r\n                showConfirmButton: false\r\n            }).then(() => {\r\n                localStorage.removeItem(\"swal1\");\r\n                localStorage.removeItem(\"swal2\");\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>HOME PAGE</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NotFound extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>PAGE NOT FOUND</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst translate = (id) => <FormattedMessage id={id}/>;\r\n\r\nexport default translate;","import React from 'react';\r\nimport {getFirstAccessLevel} from \"./UserDataService\";\r\n\r\nconst RoleContext = React.createContext({\r\n    role: getFirstAccessLevel(),\r\n    setRole: () => {}\r\n});\r\n\r\nexport default RoleContext;","import React, { Component } from \"react\";\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport \"../css/NavigationBar.css\";\r\nimport {getAccessLevels, getHeader, getLanguage, getUser, hashString} from \"../services/UserDataService\";\r\nimport Cookies from \"universal-cookie/lib\";\r\nimport { BsFillPeopleFill, BsFillPersonFill } from \"react-icons/bs\";\r\nimport Translate from '../i18n/Translate';\r\nimport RoleContext from \"../services/RoleContext\";\r\nimport NavLink from \"react-bootstrap/NavLink\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport default class NavigationBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.cookies = new Cookies();\r\n    }\r\n\r\n    logout = () => {\r\n        this.cookies.remove(\"jwt\");\r\n    };\r\n\r\n    guestNavbar = () => {\r\n        if(getUser() === \"\") {\r\n            return (\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Item>\r\n                        <Nav.Link as={Link} to=\"/login\">{Translate('login')}</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link as={Link} to=\"/register\">{Translate('register')}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            )\r\n        }\r\n    };\r\n\r\n    clientNavbar = (role) => {\r\n        if(role === process.env.REACT_APP_CLIENT_ROLE) {\r\n            return (\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Item>\r\n                        <Nav.Link>client page</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            )\r\n        }\r\n    };\r\n\r\n    managerNavbar = (role) => {\r\n        if(role === process.env.REACT_APP_MANAGER_ROLE) {\r\n            return (\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Item>\r\n                        <Nav.Link>manager page</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            )\r\n        }\r\n    };\r\n\r\n    adminNavbar = (role) => {\r\n        if(role === process.env.REACT_APP_ADMIN_ROLE) {\r\n            return (\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Item>\r\n                        <NavLink as={Link} to=\"/listAccounts\">{Translate('listAccounts')}</NavLink>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            )\r\n        }\r\n    };\r\n\r\n    accessLevelNavbar  = (role) => {\r\n        if(getUser() !== \"\" && getAccessLevels().length > 1) {\r\n            return (\r\n                <Nav className=\"ml-auto\">\r\n                    <NavDropdown alignRight title={\r\n                        <span><BsFillPeopleFill className=\"navIcons\" /> {Translate(role)}</span>}>\r\n                        {getAccessLevels().includes(process.env.REACT_APP_ADMIN_ROLE) ?\r\n                            <NavDropdown.Item onClick={() => this.changeRole(process.env.REACT_APP_ADMIN_ROLE)}>{Translate('admin')}</NavDropdown.Item> : null}\r\n                        {getAccessLevels().includes(process.env.REACT_APP_MANAGER_ROLE) ?\r\n                            <NavDropdown.Item onClick={() => this.changeRole(process.env.REACT_APP_MANAGER_ROLE)}>{Translate('manager')}</NavDropdown.Item> : null}\r\n                        {getAccessLevels().includes(process.env.REACT_APP_CLIENT_ROLE) ?\r\n                            <NavDropdown.Item onClick={() => this.changeRole(process.env.REACT_APP_CLIENT_ROLE)}>{Translate('client')}</NavDropdown.Item> : null}\r\n                    </NavDropdown>\r\n                </Nav>\r\n            )\r\n        }\r\n    };\r\n\r\n    changeRole = (role) => {\r\n      sessionStorage.setItem(\"role\", hashString(role));\r\n      window.location.replace(\"/\");\r\n    };\r\n\r\n    usernameNavbar = () => {\r\n        if(getUser() !== \"\") {\r\n            return (\r\n                <Nav className=\"ml-auto\">\r\n                    <NavDropdown alignRight title={\r\n                        <span><BsFillPersonFill className=\"navIcons\" /> {getUser()}</span>}>\r\n                        <NavDropdown.Item>profil placeholder</NavDropdown.Item>\r\n                        <NavDropdown.Item>haslo placeholder</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n            )\r\n        }\r\n    };\r\n\r\n    languageNavbar = () => {\r\n        return (\r\n            <Nav className=\"ml-auto\">\r\n                <NavDropdown title={Translate(getLanguage())}>\r\n                    <NavDropdown.Item disabled={true}>{Translate('chooseLanguage')}</NavDropdown.Item>\r\n                    <NavDropdown.Item onClick={() => this.changeLanguage(\"pl\")}>Polski</NavDropdown.Item>\r\n                    <NavDropdown.Item onClick={() => this.changeLanguage(\"en\")}>English</NavDropdown.Item>\r\n                </NavDropdown>\r\n            </Nav>\r\n        )\r\n    };\r\n\r\n    changeLanguage = (language) => {\r\n        localStorage.setItem(\"lang\", language);\r\n        if(getUser()) {\r\n            axios.put(\"/language/\" + getUser(), null ,{ headers: getHeader() })\r\n                .catch(() => {\r\n                    console.log(\"ERROR: Account not found\")\r\n                })\r\n        }\r\n        window.location.reload();\r\n    };\r\n\r\n    logoutNavbar = () => {\r\n        if(getUser() !== \"\") {\r\n            return (\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/\" onClick={this.logout}>{Translate('logout')}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            )\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <RoleContext.Consumer>\r\n                {({ role }) => (\r\n                <Navbar expand=\"lg\">\r\n                    <Navbar.Brand as={Link} to=\"/\">BOORGER</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            {this.clientNavbar(role)}\r\n                            {this.managerNavbar(role)}\r\n                            {this.adminNavbar(role)}\r\n                            {this.accessLevelNavbar(role)}\r\n                            {this.usernameNavbar()}\r\n                            {this.languageNavbar()}\r\n                            {this.guestNavbar()}\r\n                            {this.logoutNavbar()}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                )}\r\n            </RoleContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport Cookies from \"universal-cookie/lib\";\r\nimport {getFirstAccessLevel, getHeader, hashString} from \"../services/UserDataService\";\r\nimport Translate from \"../i18n/Translate\";\r\n\r\nexport default class Login extends Component {\r\n\r\n    emptyUser = {\r\n        \"login\": \"\",\r\n        \"password\": \"\",\r\n        \"language\": navigator.language\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: this.emptyUser\r\n        };\r\n        this.cookies = new Cookies();\r\n    }\r\n\r\n    handleFieldChanged = (event, field) => {\r\n        const tmp = {...this.state.user};\r\n        tmp[field] = event.target.value;\r\n        this.setState({ user: tmp });\r\n    };\r\n\r\n    reload = () => {\r\n      window.location.reload();\r\n    };\r\n\r\n    login = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/login\", this.state.user, { headers: getHeader() })\r\n            .then(response => {\r\n                if(response.data.token) {\r\n                    this.cookies.set(\"jwt\", response.data.token, { path: \"/\" });\r\n                    localStorage.setItem(\"swal1\", response.data.messages[0]);\r\n                    localStorage.setItem(\"swal2\", response.data.messages[1]);\r\n                    localStorage.setItem(\"lang\", response.data.language);\r\n                    sessionStorage.setItem(\"role\", hashString(getFirstAccessLevel()));\r\n                    this.props.history.push(\"/\");\r\n                    window.location.reload();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: error.response.data\r\n                }).then(() => this.setState({ user: this.emptyUser }))\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <FormGroup>\r\n                        <FormLabel>{Translate('username')}</FormLabel>\r\n                        <FormControl autoFocus value={this.state.user[\"login\"]} onChange={event => this.handleFieldChanged(event, \"login\")} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <FormLabel>{Translate('password')}</FormLabel>\r\n                        <FormControl type=\"password\" value={this.state.user[\"password\"]} onChange={event => this.handleFieldChanged(event, \"password\")} />\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" onClick={this.login}>{Translate('confirm')}</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Translate from \"../i18n/Translate\";\r\nimport Swal from \"sweetalert2\";\r\nimport {getHeader} from \"../services/UserDataService\";\r\n\r\nexport default class Register extends Component {\r\n\r\n    emptyUser = {\r\n        \"login\": \"\",\r\n        \"password\": \"\",\r\n        \"confirmPassword\": \"\",\r\n        \"firstname\": \"\",\r\n        \"lastname\": \"\",\r\n        \"email\": \"\",\r\n        \"language\": localStorage.getItem(\"lang\") ? localStorage.getItem(\"lang\") : navigator.language\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: this.emptyUser\r\n        }\r\n    }\r\n\r\n    handleFieldChanged = (event, field) => {\r\n        const tmp = {...this.state.user};\r\n        tmp[field] = event.target.value;\r\n        this.setState({ user: tmp });\r\n    };\r\n\r\n    register = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/register\", this.state.user, { headers: getHeader() })\r\n            .then(response => {\r\n                Swal.fire({\r\n                    icon: \"success\",\r\n                    title: response.data\r\n                }).then(() => this.props.history.push(\"/\"));\r\n            }).catch(error => {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: error.response.data\r\n            })\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <FormGroup>\r\n                        <FormLabel>{Translate('username')}</FormLabel>\r\n                        <FormControl autoFocus value={this.state.user[\"login\"]} onChange={event => this.handleFieldChanged(event, \"login\")} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <FormLabel>{Translate('password')}</FormLabel>\r\n                        <FormControl type=\"password\" value={this.state.user[\"password\"]} onChange={event => this.handleFieldChanged(event, \"password\")} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <FormLabel>{Translate('password2')}</FormLabel>\r\n                        <FormControl type=\"password\" value={this.state.user[\"confirmPassword\"]} onChange={event => this.handleFieldChanged(event, \"confirmPassword\")} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <FormLabel>{Translate('firstname')}</FormLabel>\r\n                        <FormControl value={this.state.user[\"firstname\"]} onChange={event => this.handleFieldChanged(event, \"firstname\")} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <FormLabel>{Translate('lastname')}</FormLabel>\r\n                        <FormControl value={this.state.user[\"lastname\"]} onChange={event => this.handleFieldChanged(event, \"lastname\")} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <FormLabel>{Translate('email')}</FormLabel>\r\n                        <FormControl value={this.state.user[\"email\"]} onChange={event => this.handleFieldChanged(event, \"email\")} />\r\n                    </FormGroup>\r\n\r\n                    <Button type=\"submit\" onClick={this.register}>{Translate('confirm')}</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Confirm extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Confirm page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class AccessDenied extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>ACCESS DENIED</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component }  from 'react';\r\nimport axios from 'axios';\r\nimport { getHeader } from \"../services/UserDataService\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Translate from \"../i18n/Translate\";\r\n\r\n\r\nexport default class ListAccounts extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            users: [{\r\n                login: \"\",\r\n                email: \"\",\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                active: \"\",\r\n                confirmed: \"\",\r\n                lastAuthIP: \"\",\r\n                lastAuthDate: \"\"\r\n            }],\r\n            loaded: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"/accounts\", { headers: getHeader() } )\r\n            .then(response => {\r\n                this.setState({\r\n                    users: response.data\r\n                })\r\n            }).catch(error => {\r\n                console.log(\"ERROR \" + error)\r\n            }).finally(() => {\r\n                this.setState({\r\n                    loaded: true\r\n                })\r\n            })\r\n    }\r\n\r\n    createData = (login, email, firstname, lastname, active, confirmed, lastAuthIP, lastAuthDate) => {\r\n        return { login, email, firstname, lastname, active, confirmed, lastAuthIP, lastAuthDate };\r\n    };\r\n\r\n    render() {\r\n        const classes = makeStyles({\r\n            table: {\r\n                minWidth: 600,\r\n            },\r\n        });\r\n\r\n        const rows = [];\r\n        for(let i=0; i<this.state.users.length; i++) {\r\n            rows.push(this.createData(this.state.users[i].login, this.state.users[i].email, this.state.users[i].firstname, this.state.users[i].lastname,\r\n                this.state.users[i].active.toString(), this.state.users[i].confirmed.toString(), this.state.users[i].lastAuthIP, this.state.users[i].lastAuthDate))\r\n        }\r\n\r\n        if(!this.state.loaded) {\r\n            return (\r\n                <div>\r\n                    <h1>loading</h1>\r\n                </div>\r\n            )\r\n        } else return (\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>{Translate('username')}</TableCell>\r\n                            <TableCell align=\"right\">{Translate('email')}</TableCell>\r\n                            <TableCell align=\"right\">{Translate('firstname')}</TableCell>\r\n                            <TableCell align=\"right\">{Translate('lastname')}</TableCell>\r\n                            <TableCell align=\"right\">{Translate('active')}</TableCell>\r\n                            <TableCell align=\"right\">{Translate('confirmed')}</TableCell>\r\n                            <TableCell align=\"right\">{Translate('lastAuthIP')}</TableCell>\r\n                            <TableCell align=\"right\">{Translate('lastAuthDate')}</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.login}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.login}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.email}</TableCell>\r\n                                <TableCell align=\"right\">{row.firstname}</TableCell>\r\n                                <TableCell align=\"right\">{row.lastname}</TableCell>\r\n                                <TableCell align=\"right\">{Translate(row.active)}</TableCell>\r\n                                <TableCell align=\"right\">{Translate(row.confirmed)}</TableCell>\r\n                                <TableCell align=\"right\">{row.lastAuthIP}</TableCell>\r\n                                <TableCell align=\"right\">{row.lastAuthDate}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n}","import { LOCALES } from '../Locales';\r\n\r\nexport default {\r\n    [LOCALES.ENGLISH]: {\r\n        'confirm': 'Confirm',\r\n        'login': 'Sign in',\r\n        'register': 'Sign up',\r\n        'logout': 'Logout',\r\n        'username': 'Login',\r\n        'password': 'Password',\r\n        'password2': 'Repeat password',\r\n        'firstname': \"Name\",\r\n        'lastname': 'Last name',\r\n        'email': 'E-mail',\r\n        'admin': 'Admin',\r\n        'ADMIN': 'Admin',\r\n        'manager': 'Manager',\r\n        'MANAGER': 'Manager',\r\n        'client': 'Client',\r\n        'CLIENT': 'Client',\r\n        'listAccounts': 'List accounts',\r\n        'active': 'Active',\r\n        'confirmed': 'Confirmed',\r\n        'lastAuthIP': 'Last authentication IP address',\r\n        'lastAuthDate': 'Last authentication date',\r\n        'chooseLanguage': 'Choose language',\r\n        'en-US': 'EN',\r\n        'pl-PL': 'PL',\r\n        'true': 'Yes',\r\n        'false': 'No'\r\n    }\r\n}","import { LOCALES } from '../Locales';\r\n\r\nexport default {\r\n    [LOCALES.POLISH]: {\r\n        'confirm': 'Zatwierdź',\r\n        'login': 'Zaloguj się',\r\n        'register': 'Rejestracja',\r\n        'logout': 'Wyloguj',\r\n        'username': 'Login',\r\n        'password': 'Hasło',\r\n        'password2': 'Powtórz hasło',\r\n        'firstname': \"Imię\",\r\n        'lastname': 'Nazwisko',\r\n        'email': 'E-mail',\r\n        'admin': 'Administrator',\r\n        'ADMIN': 'Administrator',\r\n        'manager': 'Menadżer',\r\n        'MANAGER': 'Menadżer',\r\n        'client': 'Klient',\r\n        'CLIENT': 'Klient',\r\n        'listAccounts': 'Lista kont',\r\n        'active': 'Aktywny',\r\n        'confirmed': 'Potwierdzony',\r\n        'lastAuthIP': 'Adres IP ostatniego uwierzytelnienia',\r\n        'lastAuthDate': 'Data ostatniego uwierzytelnienia',\r\n        'chooseLanguage': 'Wybierz język',\r\n        'en-US': 'EN',\r\n        'pl-PL': 'PL',\r\n        'true': 'Tak',\r\n        'false': 'Nie'\r\n    }\r\n}","import en from './en-US';\r\nimport pl from './pl-PL';\r\n\r\nexport default {\r\n    ...en,\r\n    ...pl\r\n}","import React, {Fragment} from 'react';\r\nimport { IntlProvider } from 'react-intl';\r\nimport messages from './messages';\r\nimport {getLanguage} from \"../services/UserDataService\";\r\n\r\nconst Provider = ({children, locale = getLanguage()}) => (\r\n  <IntlProvider\r\n  locale={locale}\r\n  textComponent={Fragment}\r\n  messages={messages[locale]}>\r\n    {children}\r\n  </IntlProvider>\r\n);\r\n\r\nexport default Provider;","import React, {Component, Fragment} from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { RestrictedRoute } from \"./RestrictedRoute\";\r\nimport Home from \"./components/Home\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Confirm from \"./components/Confirm\";\r\nimport AccessDenied from \"./components/AccessDenied\";\r\nimport ListAccounts from \"./components/ListAccounts\";\r\nimport {getCurrentAccessLevel, getLanguage} from \"./services/UserDataService\";\r\nimport { I18nProvider } from \"./i18n\";\r\nimport RoleContext from \"./services/RoleContext\";\r\nimport Cookies from \"universal-cookie/cjs\";\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role: getCurrentAccessLevel()\r\n        };\r\n        this.cookies = new Cookies();\r\n        if(!sessionStorage.getItem(\"role\")) {\r\n            this.cookies.remove(\"jwt\");\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <RoleContext.Provider value={this.state}>\r\n                <I18nProvider locale={getLanguage()}>\r\n                    <Fragment>\r\n                        <Router>\r\n                            <NavigationBar />\r\n                            <Container>\r\n                                <Switch>\r\n                                    <Route exact path=\"/\" component={Home} />\r\n                                    <RestrictedRoute path=\"/login\" component={Login} />\r\n                                    <RestrictedRoute path=\"/register\" component={Register} />\r\n                                    <RestrictedRoute path=\"/confirm\" component={Confirm} />\r\n\r\n                                    <PrivateRoute path=\"/listAccounts\" component={ListAccounts} accessLevels={[process.env.REACT_APP_ADMIN_ROLE]} />\r\n\r\n                                    <Route path=\"/accessDenied\" component={AccessDenied} />\r\n                                    <Route component={NotFound} />\r\n                                </Switch>\r\n                            </Container>\r\n                        </Router>\r\n                    </Fragment>\r\n                </I18nProvider>\r\n            </RoleContext.Provider>\r\n        );\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport HttpsRedirect from 'react-https-redirect';\r\nimport App from \"./App\";\r\n\r\nexport default class HttpsApp extends Component {\r\n    render() {\r\n        return (\r\n            <HttpsRedirect>\r\n                <App />\r\n            </HttpsRedirect>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport HttpsApp from \"./HttpsApp\";\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"http://localhost:8080/boorger\";\r\n// axios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HttpsApp />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}